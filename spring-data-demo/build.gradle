apply plugin: 'java'
apply plugin: 'maven'

group = 'com.tsctech.springdata.demo'
version = '1.0.BUILD-SNAPSHOT'

description = "spring-data-demo"

sourceCompatibility = 6
targetCompatibility = 6

logging.captureStandardOutput LogLevel.INFO

sourceSets {
	generated {
		java { srcDirs = ['build/generated']}
	}
}

configurations { 
	querydslapt 
}


repositories {

	maven { url "http://maven.springframework.org/release" }
	maven { url "http://maven.springframework.org/milestone" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
	compile group: 'log4j', name: 'log4j', version:'1.2.16'
	compile group: 'org.slf4j', name: 'slf4j-api', version:'1.6.4'
	compile group: 'org.slf4j', name: 'jcl-over-slf4j', version:'1.6.4'
	compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.6.4'
	compile group: 'org.aspectj', name: 'aspectjrt', version:'1.7.2'
	compile group: 'org.aspectj', name: 'aspectjweaver', version:'1.7.2'
	compile group: 'net.sf.flexjson', name: 'flexjson', version:'2.1'
	compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.1'
	compile(group: 'org.springframework', name: 'spring-beans', version:'3.2.6.RELEASE') { exclude(module: 'commons-logging') }
	compile group: 'org.springframework', name: 'spring-context', version:'3.2.6.RELEASE'
	compile group: 'org.springframework', name: 'spring-aop', version:'3.2.6.RELEASE'
	compile group: 'org.springframework', name: 'spring-aspects', version:'3.2.6.RELEASE'
	compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.18'
	compile group: 'org.hibernate', name: 'hibernate-core', version:'4.1.10.Final'
	compile group: 'org.hibernate', name: 'hibernate-entitymanager', version:'4.1.10.Final'
	compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version:'1.0.1.Final'
	compile group: 'commons-collections', name: 'commons-collections', version:'3.2.1'
	compile(group: 'org.hibernate', name: 'hibernate-validator', version:'4.2.0.Final') {
		exclude(module: 'jaxb-api')
		exclude(module: 'jaxb-impl')
	}
	compile group: 'javax.validation', name: 'validation-api', version:'1.0.0.GA'
	compile group: 'javax.transaction', name: 'jta', version:'1.1'
	compile group: 'org.springframework', name: 'spring-jdbc', version:'3.2.6.RELEASE'
	compile group: 'org.springframework', name: 'spring-orm', version:'3.2.6.RELEASE'
	compile group: 'com.mysema.querydsl', name: 'querydsl-jpa', version:'2.9.0'
	compile group: 'commons-pool', name: 'commons-pool', version:'1.5.6'
	compile(group: 'commons-dbcp', name: 'commons-dbcp', version:'1.3') {
		exclude(module: 'commons-logging')
		exclude(module: 'xml-apis')
	}
	compile group: 'org.springframework.data', name: 'spring-data-jpa', version:'1.3.0.RELEASE'
	compile group: 'org.springframework.data', name: 'spring-data-mongodb', version:'1.2.0.RELEASE'
	compile group: 'com.mysema.querydsl', name: 'querydsl-mongodb', version:'2.9.0'
	testCompile group: 'junit', name: 'junit', version:'4.10'
	testCompile group: 'org.springframework', name: 'spring-test', version:'3.2.6.RELEASE'

	querydslapt 'com.mysema.querydsl:querydsl-apt:2.9.0'
}


task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java 
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
		'-proc:only',
		'-processor',
		'com.mysema.query.apt.QuerydslAnnotationProcessor' 
	]
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

clean {
	delete sourceSets.generated.java.srcDirs
}

task testMongo(type: Test) {
    testLogging.showStandardStreams = true
	systemProperty 'spring.profiles.active','mongodb'
    outputs.upToDateWhen { false }
}

test {
	testLogging.showStandardStreams = true
	systemProperty 'spring.profiles.active','hibernate'
	outputs.upToDateWhen { false }
}

test.dependsOn testMongo
